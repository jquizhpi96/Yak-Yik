{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getOnePost } from '../services/posts';\nimport { getAllComments } from '../services/comments';\nimport { destroyComment } from '../services/comments';\nimport CreateComment from './CreateComment';\nimport Posts from './Posts';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetail(props) {\n  _s();\n\n  const [post, setPost] = useState('');\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const params = useParams();\n  console.log(params);\n  const {\n    currentUser\n  } = props;\n  console.log(currentUser);\n  console.log(comments);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postData = await getOnePost(id);\n      setPost(postData); // setComments(post.comments)\n      // console.log(postData)\n    };\n\n    fetchPost();\n  }, []);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const commentData = await getAllComments();\n      setComments(commentData);\n    };\n\n    fetchComments();\n  }, []);\n\n  const handleDelete = async id => {\n    await destroyComment(id);\n    setComments(prevState => prevState.filter(comment => comment.id !== id));\n  };\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), post.comments.map(comment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === comment.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleDelete(comment.id);\n          },\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, comments.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CreateComment, {\n      postId: post.id,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"06YMTs00Wk0B4rWCBlrCMHFd9Cw=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/PostDetail.jsx"],"names":["React","useState","useEffect","useParams","getOnePost","getAllComments","destroyComment","CreateComment","Posts","Link","PostDetail","props","post","setPost","id","comments","setComments","params","console","log","currentUser","fetchPost","postData","fetchComments","commentData","handleDelete","prevState","filter","comment","content","map","user_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,cAAT,QAA8B,sBAA9B;AACA,SAASC,cAAT,QAA8B,sBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASX,SAAS,EAAxB;AACA,QAAM,CAAEY,QAAF,EAAYC,WAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMgB,MAAM,GAAGd,SAAS,EAAxB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAkBT,KAAxB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAE5B,YAAMC,QAAQ,GAAG,MAAMlB,UAAU,CAACU,EAAD,CAAjC;AACAD,MAAAA,OAAO,CAACS,QAAD,CAAP,CAH4B,CAI5B;AACA;AACD,KAND;;AASAD,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;AAaAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,aAAa,GAAG,YAAY;AAChC,YAAMC,WAAW,GAAG,MAAMnB,cAAc,EAAxC;AACAW,MAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,KAHD;;AAIAD,IAAAA,aAAa;AACd,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,MAAOX,EAAP,IAAc;AACjC,UAAMR,cAAc,CAACQ,EAAD,CAApB;AACAE,IAAAA,WAAW,CAAEU,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAkBC,OAAD,IAAaA,OAAO,CAACd,EAAR,KAAeA,EAA7C,CAAhB,CAAX;AACD,GAHD;;AAIA,MAAI,CAACF,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAGD,sBACE;AAAA,4BAEM;AAAA,gBAAMA,IAAI,CAACiB;AAAX;AAAA;AAAA;AAAA;AAAA,YAFN,EAGGjB,IAAI,CAACG,QAAL,CAAce,GAAd,CAAkBF,OAAO,iBACxB,QAAC,KAAD,CAAO,QAAP;AAAA,8BACA;AAAA,kBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADA,EAIE,CAAAT,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEN,EAAb,MAAoBc,OAAO,CAACG,OAA5B,iBACF;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAK;AAACN,YAAAA,YAAY,CAACG,OAAO,CAACd,EAAT,CAAZ;AAAyB,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUC,QAAQ,CAACD,EAAnB;AAAA;AAAA;AAAA;AAAA,cALA;AAAA,OAAqBc,OAAO,CAACd,EAA7B;AAAA;AAAA;AAAA;AAAA,YADD,CAHH,eAmBE,QAAC,aAAD;AACE,MAAA,MAAM,EAAGF,IAAI,CAACE,EADhB;AAEE,MAAA,WAAW,EAAIM;AAFjB;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAxEQV,U;UAEQP,S,EAEAA,S;;;KAJRO,U;AA0ET,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getOnePost } from '../services/posts'\nimport { getAllComments} from '../services/comments'\nimport { destroyComment} from '../services/comments'\nimport CreateComment from './CreateComment';\nimport Posts from './Posts';\nimport { Link } from 'react-router-dom';\n\n\nfunction PostDetail(props) {\n  const [post, setPost] = useState('');\n  const { id } = useParams();\n  const [ comments, setComments ] = useState([])\n  const params = useParams()\n  console.log(params)\n  \n  const { currentUser } = props\n  console.log(currentUser)\n  console.log(comments)\n  \n \n  useEffect(() => {\n    const fetchPost = async () => {\n      \n      const postData = await getOnePost(id);\n      setPost(postData)\n      // setComments(post.comments)\n      // console.log(postData)\n    }\n    \n    \n    fetchPost()\n  }, [])\n  \n  useEffect(() => {\n    const fetchComments = async () => {\n      const commentData = await getAllComments();\n      setComments(commentData);\n    };\n    fetchComments();\n  }, []);\n  \n  const handleDelete = async (id) => {\n    await destroyComment(id);\n    setComments((prevState) => prevState.filter((comment) => comment.id !== id));\n  };\n  if (!post) {\n    return <h4>Loading...</h4>\n  }\n  \n\n  return (\n    <div>\n      \n          <h3 >{post.content}</h3>\n      {post.comments.map(comment => (\n        <React.Fragment key={comment.id} >\n        <p >{comment.content}</p>\n        \n        {\n          currentUser?.id === comment.user_id &&\n        <div key={comments.id}>\n          <button>Like</button>\n          <button onClick={()=> {handleDelete(comment.id)}} >delete</button>\n        </div>\n        \n          }\n          </React.Fragment>\n           ))}\n         \n      \n      <CreateComment\n        postId ={post.id}\n        currentUser = {currentUser}\n      />\n    \n    \n    \n      \n    </div>\n  );\n}\n\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}