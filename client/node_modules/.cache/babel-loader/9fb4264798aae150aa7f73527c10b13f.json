{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, React } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from '../components/Modal';\nimport CreatePost from './CreatePost';\nimport PostDetail from './PostDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Posts(props) {\n  _s();\n\n  const {\n    posts,\n    setPosts,\n    handleDelete,\n    currentUser\n  } = props;\n  const [show, setShow] = useState(false);\n\n  const toggleModal = () => {\n    setShow(!show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n      currentUser: currentUser,\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === post.user_id && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}`,\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShow(post.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) !== post.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}`,\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), show && /*#__PURE__*/_jsxDEV(Modal, {\n        posts: posts,\n        handleDelate: handleDelete,\n        show: show,\n        setShow: setShow,\n        toggleModal: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/Posts.jsx"],"names":["useState","React","Link","Modal","CreatePost","PostDetail","Posts","props","posts","setPosts","handleDelete","currentUser","show","setShow","toggleModal","map","post","content","id","user_id"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,KAAlB,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA;AAAjC,MAAiDJ,KAAvD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACzBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACA,GAFD;;AAIA,sBACE;AAAA,4BACG,QAAC,UAAD;AACG,MAAA,WAAW,EAAED,WADhB;AAEI,MAAA,KAAK,EAAEH,KAFX;AAGE,MAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,YADH,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASID,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACZ;AAAA,8BACC;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADD,EAGI,CAAAN,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEO,EAAb,MAAoBF,IAAI,CAACG,OAAzB,iBACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASH,IAAI,CAACE,EAAG,OAA5B;AAAA,iCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASF,IAAI,CAACE,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE;AAAQ,UAAA,OAAO,EAAE,MAAML,OAAO,CAACG,IAAI,CAACE,EAAN,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAAqBF,IAAI,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA,cAJN,EAuBG,CAAAP,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEO,EAAb,MAAoBF,IAAI,CAACG,OAAzB,iBACD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASH,IAAI,CAACE,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBAxBF,EA6BIN,IAAI,iBACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,KAAd;AAAqB,QAAA,YAAY,EAAEE,YAAnC;AAAiD,QAAA,IAAI,EAAEE,IAAvD;AAA6D,QAAA,OAAO,EAAEC,OAAtE;AAA8E,QAAA,WAAW,EAAEC;AAA3F;AAAA;AAAA;AAAA;AAAA,cA9BV;AAAA,OAAUE,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD;;GA3DQZ,K;;KAAAA,K;AA6DT,eAAeA,KAAf","sourcesContent":["import {useState, React} from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from '../components/Modal';\nimport CreatePost from './CreatePost';\nimport PostDetail from './PostDetail';\n\n\nfunction Posts(props) {\n  const { posts, setPosts, handleDelete, currentUser } = props;\n  const [show, setShow] = useState(false);\n\n  const toggleModal = () => {\n   setShow(!show)\n  }\n\n  return (\n    <div>\n       <CreatePost\n          currentUser={currentUser}\n           posts={posts}\n         setPosts={setPosts}/>\n   \n      <h3>Posts</h3>\n     \n      {\n        posts.map(post => (\n          <div key={post.id}>\n           <h3>{post.content}</h3>\n           {\n              currentUser?.id === post.user_id && (\n                <React.Fragment key={post.id}>\n                <Link to={`/posts/${post.id}/edit`}><button>Edit</button></Link>\n                <button>Like</button>\n                  <Link to={`/posts/${post.id}`}>comments</Link>\n                  \n                  <button onClick={() => setShow(post.id)}>delete</button>\n                  \n                  {/* {show && (\n                    <Modal posts={posts} handleDelate={handleDelete} show={show} setShow={setShow}toggleModal={toggleModal}/>\n          \n                  \n                  )} */}\n                 \n                  \n                    {/* <button onClick={() => handleOpen(post.id)}>delete</button> */}\n                    \n                  \n          </React.Fragment>\n              )}\n            {currentUser?.id !== post.user_id && (\n            <>\n                <button>Like</button>\n                <Link to={`/posts/${post.id}`}>comments</Link>\n            </>\n            )}\n             {show && (\n                    <Modal posts={posts} handleDelate={handleDelete} show={show} setShow={setShow}toggleModal={toggleModal}/>\n          \n                  \n                  )}\n          </div>\n        ))\n      }\n    \n    </div>\n  );\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}