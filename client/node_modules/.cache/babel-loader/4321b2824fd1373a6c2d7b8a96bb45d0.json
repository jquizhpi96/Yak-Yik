{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/EditPostUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { destroyPost, putPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPostUser(props) {\n  _s();\n\n  {\n    const [formData, setFormData] = useState({\n      content: ''\n    });\n    const {\n      content\n    } = formData;\n    const {\n      id\n    } = useParams();\n    const {\n      posts\n    } = props;\n    useEffect(() => {\n      const prefillFormData = () => {\n        const postData = posts.find(post => post.id === Number(id));\n        setFormData({\n          content: postData.content\n        });\n      };\n\n      if (posts.length) {\n        prefillFormData();\n      }\n    }, [posts, id]);\n\n    const handleUpdate = async (id, postData) => {\n      const updatedPost = await putPost(id, postData);\n      setUserPosts(prevState => prevState.map(post => {\n        return post.id === Number(id) ? updatedPost : post;\n      }));\n      history.push(\"/users\");\n    };\n\n    const handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      setFormData(prevState => ({ ...prevState,\n        [name]: value\n      }));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleUpdate(id, formData);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Post:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"content\",\n          value: content,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(EditPostUser, \"2Tz+Z9T8IbdClmqKJ2K8cG/lh2I=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPostUser;\nexport default EditPostUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostUser\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/EditPostUser.jsx"],"names":["useParams","useState","useEffect","useHistory","destroyPost","putPost","EditPostUser","props","formData","setFormData","content","id","posts","prefillFormData","postData","find","post","Number","length","handleUpdate","updatedPost","setUserPosts","prevState","map","history","push","handleChange","e","name","value","target","preventDefault"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mBAArC;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B;AACE,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,MAAAA,OAAO,EAAE;AAD8B,KAAD,CAAxC;AAGA,UAAM;AAAEA,MAAAA;AAAF,QAAcF,QAApB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASX,SAAS,EAAxB;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAWL,KAAjB;AAGAL,IAAAA,SAAS,CAAC,MAAM;AACd,YAAMW,eAAe,GAAG,MAAM;AAC5B,cAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAYC,IAAD,IAC1BA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CADH,CAAjB;AAEAF,QAAAA,WAAW,CAAC;AACVC,UAAAA,OAAO,EAAEI,QAAQ,CAACJ;AADR,SAAD,CAAX;AAGD,OAND;;AAOA,UAAIE,KAAK,CAACM,MAAV,EAAkB;AAChBL,QAAAA,eAAe;AAChB;AACF,KAXQ,EAWN,CAACD,KAAD,EAAQD,EAAR,CAXM,CAAT;;AAaA,UAAMQ,YAAY,GAAG,OAAOR,EAAP,EAAWG,QAAX,KAAwB;AAC3C,YAAMM,WAAW,GAAG,MAAMf,OAAO,CAACM,EAAD,EAAKG,QAAL,CAAjC;AACAO,MAAAA,YAAY,CAAEC,SAAD,IACXA,SAAS,CAACC,GAAV,CAAeP,IAAD,IAAU;AACtB,eAAOA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAlB,GAAyBS,WAAzB,GAAuCJ,IAA9C;AACD,OAFD,CADU,CAAZ;AAKAQ,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACD,KARD;;AAUA,UAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACArB,MAAAA,WAAW,CAACa,SAAS,KAAK,EACxB,GAAGA,SADqB;AAExB,SAACM,IAAD,GAAQC;AAFgB,OAAL,CAAV,CAAX;AAID,KAND;;AAQA,wBAEE;AAAM,MAAA,QAAQ,EAAGF,CAAD,IAAO;AACrBA,QAAAA,CAAC,CAACI,cAAF;AACAZ,QAAAA,YAAY,CAACR,EAAD,EAAKH,QAAL,CAAZ;AACD,OAHD;AAAA,8BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,yCAEA;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,SAFT;AAGI,UAAA,KAAK,EAAEE,OAHX;AAII,UAAA,QAAQ,EAAEgB;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAoBD;AACF;;GA9DQpB,Y;UAMUN,S;;;KANVM,Y;AA+DP,eAAeA,YAAf","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { destroyPost, putPost } from \"../services/posts\";\n\n\nfunction EditPostUser(props) {\n  {\n    const [formData, setFormData] = useState({\n      content: ''\n    })\n    const { content } = formData;\n    const { id } = useParams();\n    const { posts} = props;\n  \n \n    useEffect(() => {\n      const prefillFormData = () => {\n        const postData = posts.find((post) =>\n          post.id === Number(id));\n        setFormData({\n          content: postData.content\n        })\n      }\n      if (posts.length) {\n        prefillFormData()\n      }\n    }, [posts, id])\n\n    const handleUpdate = async (id, postData) => {\n      const updatedPost = await putPost(id, postData);\n      setUserPosts((prevState) =>\n        prevState.map((post) => {\n          return post.id === Number(id) ? updatedPost : post;\n        })\n      );\n      history.push(\"/users\");\n    };\n\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value,\n      }))\n    }\n\n    return (\n   \n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handleUpdate(id, formData);\n      }}>\n        <h3>Edit Post</h3>\n        <label>\n          Post:\n        <input\n            type='text'\n            name='content'\n            value={content}\n            onChange={handleChange}\n          />\n        </label>\n        <button>Submit</button>\n      </form>\n      \n    )\n  }\n}\n  export default EditPostUser;"]},"metadata":{},"sourceType":"module"}