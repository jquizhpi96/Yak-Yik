{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/PostDetail/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOnePost } from \"../../services/posts\";\nimport { destroyComment } from \"../../services/comments\";\nimport CreateComment from \"../CreateComment\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./PostDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetail(props) {\n  _s();\n\n  const [post, setPost] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const params = useParams();\n  const history = useHistory();\n  console.log(params);\n  const {\n    currentUser\n  } = props;\n  console.log(currentUser);\n  console.log(comments);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postData = await getOnePost(id);\n      setPost(postData);\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const handleDelete = async id => {\n    await destroyComment(id);\n    setComments(prevState => prevState.filter(comment => comment.id !== id));\n    history.go(0);\n  };\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [post.comments.length, \" comment\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), post.comments.map(comment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === comment.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleDelete(comment.id);\n          },\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, comments.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CreateComment, {\n      postId: post.id,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"LgLk4KYxBPs/Bmp+lchSxgOfw6g=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/PostDetail/PostDetail.jsx"],"names":["React","useState","useEffect","useParams","getOnePost","destroyComment","CreateComment","useHistory","PostDetail","props","post","setPost","id","comments","setComments","params","history","console","log","currentUser","fetchPost","postData","handleDelete","prevState","filter","comment","go","content","length","map","user_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOnePost } from \"../../services/posts\";\nimport { destroyComment } from \"../../services/comments\";\nimport CreateComment from \"../CreateComment\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./PostDetail.css\"\nfunction PostDetail(props) {\n  const [post, setPost] = useState(\"\");\n  const { id } = useParams();\n  const [comments, setComments] = useState([]);\n  const params = useParams();\n  const history = useHistory();\n\n  console.log(params);\n\n  const { currentUser } = props;\n  console.log(currentUser);\n  console.log(comments);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postData = await getOnePost(id);\n      setPost(postData);\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const handleDelete = async (id) => {\n    await destroyComment(id);\n    setComments((prevState) =>\n      prevState.filter((comment) => comment.id !== id)\n    );\n    history.go(0);\n  };\n  if (!post) {\n    return <h4>Loading...</h4>;\n  }\n\n  return (\n    <div>\n      <div className=\"post-content\">{post.content}</div>\n      <p>{post.comments.length} comment</p>\n\n      {post.comments.map((comment) => (\n        <React.Fragment key={comment.id}>\n          <div className=\"comments\">{comment.content}</div>\n\n          {currentUser?.id === comment.user_id && (\n            <div key={comments.id}>\n            \n              <button \n                onClick={() => {\n                  handleDelete(comment.id);\n                }}\n              >\n                delete\n              </button>\n            </div>\n          )}\n        </React.Fragment>\n      ))}\n\n      <CreateComment postId={post.id} currentUser={currentUser} />\n    </div>\n  );\n}\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}