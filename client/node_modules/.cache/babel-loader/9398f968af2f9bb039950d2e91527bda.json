{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/UserProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { destroyPost, putPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserProfile(props) {\n  _s();\n\n  // const [user, setUser] = useState([])\n  // const { id} = useParams();\n  const [show, setShow] = useState(false);\n  const [userposts, setUserPosts] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser,\n    posts\n  } = props;\n  console.log(currentUser.name.length);\n  console.log(posts); // useEffect(() => {\n  //   const fetchPosts = async (currentUser_id) => {\n  //     const postData = await getUserPost(currentUser.id);\n  //     setUser(postData);\n  //   };\n  //   fetchPosts();\n  // }, []);\n\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setUserPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push(\"/users\");\n  };\n\n  if ((currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === posts.user_id) {// posts.map(post => {\n    //   <>\n    //   <h3>{currentUser.name}</h3>\n    //     <p>{post.content} </p>\n    //     </>\n    // })\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Hello \", currentUser.name.slice(0, 2), \" .... I mean User \", currentUser.id, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), currentUser && posts.filter(post => {\n      return post.user_id === currentUser.id;\n    }).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [post.content, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post.id}`,\n        children: \"comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post.id}/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShow(post.id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfile, \"1SlfX3iXLyII+3oF9PiD/Z6JjEE=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/UserProfile.jsx"],"names":["React","Link","useState","useHistory","destroyPost","putPost","UserProfile","props","show","setShow","userposts","setUserPosts","history","currentUser","posts","console","log","name","length","handleUpdate","id","postData","updatedPost","prevState","map","post","Number","push","user_id","slice","filter","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mBAArC;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AAEA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBP,KAA/B;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACI,IAAZ,CAAiBC,MAA7B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAV0B,CAY1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMK,YAAY,GAAG,OAAOC,EAAP,EAAWC,QAAX,KAAwB;AAC3C,UAAMC,WAAW,GAAG,MAAMjB,OAAO,CAACe,EAAD,EAAKC,QAAL,CAAjC;AACAV,IAAAA,YAAY,CAAEY,SAAD,IACXA,SAAS,CAACC,GAAV,CAAeC,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAlB,GAAyBE,WAAzB,GAAuCG,IAA9C;AACD,KAFD,CADU,CAAZ;AAKAb,IAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACD,GARD;;AASA,MAAI,CAAAd,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEO,EAAb,MAAoBN,KAAK,CAACc,OAA9B,EAAuC,CAErC;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,4BAAYf,WAAW,CAACI,IAAZ,CAAiBY,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAZ,wBAA4DhB,WAAW,CAACO,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,WAAW,IACVC,KAAK,CAACgB,MAAN,CAAcL,IAAD,IAAU;AAErB,aAAOA,IAAI,CAACG,OAAL,KAAiBf,WAAW,CAACO,EAApC;AACD,KAHD,EAIGI,GAJH,CAIQC,IAAD,iBACH;AAAA,8BAEE;AAAA,mBAAIA,IAAI,CAACM,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASN,IAAI,CAACL,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIM,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASK,IAAI,CAACL,EAAG,OAA5B;AAAA,+BAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cAJN,eAMM;AAAQ,QAAA,OAAO,EAAE,MAAMX,OAAO,CAACgB,IAAI,CAACL,EAAN,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANN;AAAA,OAAWK,IAAI,CAACL,EAAhB;AAAA;AAAA;AAAA;AAAA,YALJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA7DQd,W;UAKSH,U;;;KALTG,W;AA+DT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { destroyPost, putPost } from \"../services/posts\";\n\n\nfunction UserProfile(props) {\n  // const [user, setUser] = useState([])\n  // const { id} = useParams();\n  const [show, setShow] = useState(false);\n  const [userposts, setUserPosts] = useState([])\n  const history = useHistory()\n\n  const { currentUser, posts } = props\n \n  console.log(currentUser.name.length)\n  console.log(posts)\n\n  // useEffect(() => {\n  //   const fetchPosts = async (currentUser_id) => {\n  //     const postData = await getUserPost(currentUser.id);\n  //     setUser(postData);\n  //   };\n  //   fetchPosts();\n  // }, []);\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setUserPosts((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(id) ? updatedPost : post;\n      })\n    );\n    history.push(\"/users\");\n  };\n  if (currentUser?.id === posts.user_id) {\n\n    // posts.map(post => {\n    //   <>\n    //   <h3>{currentUser.name}</h3>\n    //     <p>{post.content} </p>\n    //     </>\n    // })\n  }\n\n  return (\n    <div>\n      <h3> Hello {currentUser.name.slice(0, 2)} .... I mean User {currentUser.id}!</h3>\n      {currentUser &&\n        posts.filter((post) => {\n          \n          return post.user_id === currentUser.id\n        })\n          .map((post) => (\n            <div key= {post.id}>\n         \n              <p>{post.content} </p>\n              <Link to={`/posts/${post.id}`}>comments</Link>\n                  <Link to={`/posts/${post.id}/edit`}><button>Edit</button></Link>\n\n                  <button onClick={() => setShow(post.id)}>delete</button>\n        </div>\n          ))}\n      \n     \n     \n    </div>\n  );\n}\n\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}