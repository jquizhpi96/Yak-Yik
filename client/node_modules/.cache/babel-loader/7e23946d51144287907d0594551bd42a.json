{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Posts from \"../screens/Posts\";\nimport { getAllPosts } from \"../services/posts\";\nimport { destroyPost, postPost, putPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postData = await getAllPosts();\n      setPosts(postData);\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleCreate = async postData => {\n    const newPost = await postPost(postData);\n    setPosts(prevState => [...prevState, newPost]);\n    history.push(\"/posts\");\n  };\n\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setFoods(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push(\"/posts\");\n  };\n\n  const handleDelete = async id => {\n    await destroyPost(id);\n    setPosts(prevState => prevState.filter(post => post.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: posts,\n          handleDelete: handleDelete,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id/edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"WUWaAd0hv1spYhLCdCOER0VwhO0=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/containers/MainContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","Posts","getAllPosts","destroyPost","postPost","putPost","MainContainer","props","posts","setPosts","comments","setComments","history","currentUser","fetchPosts","postData","handleCreate","newPost","prevState","push","handleUpdate","id","updatedPost","setFoods","map","post","Number","handleDelete","filter"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,mBAA/C;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMgB,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBN,KAAxB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMb,WAAW,EAAlC;AACAO,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,MAAOD,QAAP,IAAoB;AACvC,UAAME,OAAO,GAAG,MAAMb,QAAQ,CAACW,QAAD,CAA9B;AACAN,IAAAA,QAAQ,CAAES,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAhB,CAAR;AACAL,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACD,GAJD;;AAKA,QAAMC,YAAY,GAAG,OAAOC,EAAP,EAAWN,QAAX,KAAwB;AAC3C,UAAMO,WAAW,GAAG,MAAMjB,OAAO,CAACgB,EAAD,EAAKN,QAAL,CAAjC;AACAQ,IAAAA,QAAQ,CAAEL,SAAD,IACPA,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACJ,EAAL,KAAYK,MAAM,CAACL,EAAD,CAAlB,GAAyBC,WAAzB,GAAuCG,IAA9C;AACD,KAFD,CADM,CAAR;AAKAb,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACD,GARD;;AASA,QAAMQ,YAAY,GAAG,MAAON,EAAP,IAAc;AACjC,UAAMlB,WAAW,CAACkB,EAAD,CAAjB;AACAZ,IAAAA,QAAQ,CAAES,SAAD,IAAeA,SAAS,CAACU,MAAV,CAAkBH,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAvC,CAAhB,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEb,KADT;AAEE,UAAA,YAAY,EAAEmB,YAFhB;AAGE,UAAA,WAAW,EAAEd;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjDQP,a;UAISN,U;;;KAJTM,a;AAmDT,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Posts from \"../screens/Posts\";\nimport { getAllPosts } from \"../services/posts\";\nimport { destroyPost, postPost, putPost } from \"../services/posts\";\n\nfunction MainContainer(props) {\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postData = await getAllPosts();\n      setPosts(postData);\n    };\n    fetchPosts();\n  }, []);\n\n  const handleCreate = async (postData) => {\n    const newPost = await postPost(postData);\n    setPosts((prevState) => [...prevState, newPost]);\n    history.push(\"/posts\");\n  };\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setFoods((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(id) ? updatedPost : post;\n      })\n    );\n    history.push(\"/posts\");\n  };\n  const handleDelete = async (id) => {\n    await destroyPost(id);\n    setPosts((prevState) => prevState.filter((post) => post.id !== id));\n  };\n\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/posts\">\n          <Posts\n            posts={posts}\n            handleDelete={handleDelete}\n            currentUser={currentUser}/>\n        </Route>\n        <Route path=\"/posts/new\"></Route>\n        <Route path='/posts/:id/edit'></Route>\n        \n      </Switch>\n    </div>\n  );\n}\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}