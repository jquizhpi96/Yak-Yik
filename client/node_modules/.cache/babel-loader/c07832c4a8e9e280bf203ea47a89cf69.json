{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/Posts/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, React } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Likes from \"../../components/Likes\";\nimport Modal from \"../../components/Modal\";\nimport CreatePost from \"../CreatePost/CreatePost\";\nimport \"./Posts.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { AZ, ZA } from \"../../utils/Sort\";\nimport Sort from \"../../components/Sort/Sort\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts(props) {\n  _s();\n\n  const {\n    posts,\n    setPosts,\n    handleDelete,\n    currentUser\n  } = props;\n  const [show, setShow] = useState(false);\n\n  const icon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"commentsbubble\",\n    icon: faComments,\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 16\n  }, this);\n\n  const editIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"editIcon\",\n    icon: faEdit,\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 20\n  }, this);\n\n  const trashIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"trashIcon\",\n    icon: faTrashAlt,\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n\n  const [queriedLikes, setQueriedLikes] = useState([]);\n  const [sortType, setSortType] = useState([]);\n  const [postId, setPostId] = useState('');\n\n  const toggleModal = () => {\n    setShow(!show);\n  };\n\n  const handleSort = type => {\n    setSortType(type);\n\n    switch (type) {\n      case \"null\":\n        setQueriedLikes(queriedLikes);\n        break;\n\n      case \"like-ascending\":\n        setQueriedLikes(AZ(queriedLikes));\n        break;\n\n      case \"like-descending\":\n        setQueriedLikes(ZA(queriedLikes));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newQueriedLikes = posts.filter(post => post.likes);\n    setQueriedLikes(newQueriedLikes, () => handleSort(sortType));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n      className: \"createPost\",\n      currentUser: currentUser,\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"index\",\n      children: posts.slice(0).reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lol\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === post.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(Likes, {\n                allLikes: post.likes,\n                posts: posts,\n                postId: post.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/posts/${post.id}`,\n                children: [icon, \" \", post.comments.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/posts/${post.id}/edit`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit\",\n                  children: editIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => {\n                  setShow(curr => !curr);\n                  setPostId(post.id);\n                },\n                children: trashIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) !== post.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userContainer\",\n            children: [/*#__PURE__*/_jsxDEV(Likes, {\n              allLikes: post.likes,\n              posts: posts,\n              postId: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"comments\",\n              to: `/posts/${post.id}`,\n              children: [icon, \"  \", post.comments.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(Modal, {\n      posts: posts,\n      handleDelate: handleDelete,\n      show: show,\n      postsId: posts.id,\n      setShow: setShow,\n      toggleModal: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"no\",\n        onClick: () => setShow(false),\n        children: \"no\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"yes\",\n        onClick: () => {\n          handleDelete(postId);\n          setShow(false);\n        },\n        children: \"yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"j9XKrNLNT7Sj0RL+e1JiQVlS+Uk=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/Posts/Posts.jsx"],"names":["useState","React","Link","Likes","Modal","CreatePost","FontAwesomeIcon","faComments","faEdit","faTrashAlt","AZ","ZA","Sort","Posts","props","posts","setPosts","handleDelete","currentUser","show","setShow","icon","editIcon","trashIcon","queriedLikes","setQueriedLikes","sortType","setSortType","postId","setPostId","toggleModal","handleSort","type","handleSubmit","event","preventDefault","newQueriedLikes","filter","post","likes","slice","reverse","map","content","id","user_id","comments","length","curr"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Likes from \"../../components/Likes\";\nimport Modal from \"../../components/Modal\";\nimport CreatePost from \"../CreatePost/CreatePost\";\nimport \"./Posts.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComments} from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons'\nimport { AZ, ZA, } from \"../../utils/Sort\"\nimport Sort from \"../../components/Sort/Sort\";\n\nfunction Posts(props) {\n  const { posts, setPosts, handleDelete, currentUser } = props;\n  const [show, setShow] = useState(false);\n  const icon = <FontAwesomeIcon className= \"commentsbubble\" icon={faComments} size=\"lg\"/>\n  const editIcon = <FontAwesomeIcon className=\"editIcon\" icon={faEdit} size=\"lg\"/>\n  const trashIcon = <FontAwesomeIcon className=\"trashIcon\" icon={faTrashAlt} size=\"lg\"/>\n  const [queriedLikes, setQueriedLikes] = useState([]);\n  const [sortType, setSortType] = useState([])\n  const [postId, setPostId] = useState('')\n  \n  const toggleModal = () => {\n    setShow(!show);\n  };\n  \n  const handleSort = type => {\n    setSortType(type)\n    switch (type) {\n      case \"null\":\n        setQueriedLikes(queriedLikes)\n        break\n      case \"like-ascending\":\n        setQueriedLikes(AZ(queriedLikes))\n        break\n      case \"like-descending\":\n        setQueriedLikes(ZA(queriedLikes))\n        break\n      default:\n        break\n    }\n  }\n  const handleSubmit = event => {\n    event.preventDefault()\n    const newQueriedLikes= posts.filter(post => post.likes)\n    setQueriedLikes(newQueriedLikes, () => handleSort(sortType))\n  }\n\n  return (\n  \n    <div className=\"body\">\n      <CreatePost className=\"createPost\" currentUser={currentUser} posts={posts} setPosts={setPosts} />\n\n      <br />\n      {/* <Sort  onSubmit={handleSubmit} onChange={handleSort}/> */}\n      <div className=\"index\">\n      {posts.slice(0).reverse().map((post) => (\n        <div key={post.id}>\n          <div className=\"lol\">\n          <div className=\"post\">{post.content}</div>\n    \n          \n          {currentUser?.id === post.user_id && (\n            <div className=\"userContainer\" key={post.id}>\n              {/* <button>Like</button> */}\n              <div className = \"small\">\n              <Likes allLikes={post.likes} posts={posts} postId={post.id} />\n              <Link to={`/posts/${post.id}`}>\n                {icon} {post.comments.length}\n              </Link>\n              <Link to={`/posts/${post.id}/edit`}>\n                <button className=\"edit\">{editIcon}</button>\n              </Link>\n              <button className = \"delete\" onClick={() => {\n                setShow(curr => !curr)\n                setPostId(post.id)\n                  }}>{trashIcon}</button>\n                  </div>\n            </div>\n          )}\n          {currentUser?.id !== post.user_id && (\n            <div className = 'userContainer'>\n              \n              < Likes allLikes={post.likes} posts={posts} postId={post.id} />\n              <Link className= \"comments\" to={`/posts/${post.id}`}>\n              {icon}  {post.comments.length}\n              </Link>\n              \n            </div>\n            )}\n            </div>\n        </div>\n      ))}\n       </div>\n      {show && (\n        <Modal\n          posts={posts}\n          handleDelate={handleDelete}\n          show={show}\n          postsId={posts.id}\n          setShow={setShow}\n          toggleModal={toggleModal}\n        >\n          <p>Are you sure?</p>\n          <br/>\n          <button className=\"no\"onClick={() => setShow(false)}>no</button>\n          <button className=\"yes\"\n            onClick={() => {\n              handleDelete(postId);\n              setShow(false);\n            }}\n          >\n            yes\n          </button>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}