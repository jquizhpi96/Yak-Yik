{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/CreateComment.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { postComment } from \"../services/comments\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateComment(props) {\n  _s();\n\n  const history = useHistory();\n  const [comments, setComments] = useState([]);\n  const [formData, setFormData] = useState({\n    content: \"\"\n  });\n  const {\n    content\n  } = formData;\n  const {\n    postId,\n    currentUser,\n    posts\n  } = props;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleComment = async () => {\n    const newComment = await postComment(postId, {\n      content: content\n    });\n    setComments(prevState => [...prevState, newComment]);\n    history.push(`/posts/${posts.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleComment,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add A Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\",\n        placeholder: \"New Comment\",\n        value: content,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateComment, \"enW7mQmUw63o2rAS79GaCb8G4y4=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateComment;\nexport default CreateComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/CreateComment.jsx"],"names":["useState","postComment","useHistory","CreateComment","props","history","comments","setComments","formData","setFormData","content","postId","currentUser","posts","handleChange","e","name","value","target","prevState","handleComment","newComment","push","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,OAAO,EAAE;AAD8B,GAAD,CAAxC;AAIA,QAAM;AAAEA,IAAAA;AAAF,MAAcF,QAApB;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA;AAAvB,MAAiCT,KAAvC;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,WAAW,CAAEU,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B,OAACH,IAAD,GAAQC;AAFkB,KAAhB,CAAD,CAAX;AAID,GAND;;AAOA,QAAMG,aAAa,GAAG,YAAY;AAChC,UAAMC,UAAU,GAAG,MAAMpB,WAAW,CAACU,MAAD,EAAS;AAC3CD,MAAAA,OAAO,EAAEA;AADkC,KAAT,CAApC;AAGAH,IAAAA,WAAW,CAAEY,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeE,UAAf,CAAhB,CAAX;AACAhB,IAAAA,OAAO,CAACiB,IAAR,CAAc,UAAST,KAAK,CAACU,EAAG,EAAhC;AACD,GAND;;AAQA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,KAAK,EAAEV,OAJT;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3CQX,a;UACSD,U;;;KADTC,a;AA6CT,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\nimport { postComment } from \"../services/comments\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CreateComment(props) {\n  const history = useHistory();\n\n  const [comments, setComments] = useState([]);\n  const [formData, setFormData] = useState({\n    content: \"\",\n  });\n\n  const { content } = formData;\n  const { postId, currentUser, posts } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const handleComment = async () => {\n    const newComment = await postComment(postId, {\n      content: content,\n    });\n    setComments((prevState) => [...prevState, newComment]);\n    history.push(`/posts/${posts.id}`);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleComment}>\n        <p>Add A Comment</p>\n        <input\n          type=\"text\"\n          name=\"content\"\n          placeholder=\"New Comment\"\n          value={content}\n          required\n          onChange={handleChange}\n        />\n\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateComment;\n"]},"metadata":{},"sourceType":"module"}