{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/EditPostUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { destroyPost, putPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPostUser(props) {\n  _s();\n\n  const [userPosts, setUserPosts] = useState([]);\n  const [formData, setFormData] = useState({\n    content: ''\n  });\n  const {\n    content\n  } = formData;\n  const {\n    id\n  } = useParams();\n  const {\n    posts\n  } = props;\n  const history = useHistory();\n  useEffect(() => {\n    const prefillFormData = () => {\n      const postData = posts.find(post => post.id === Number(id));\n      setFormData({\n        content: postData.content\n      });\n    };\n\n    if (posts.length) {\n      prefillFormData();\n    }\n  }, [posts, id]);\n\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setUserPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push(\"/users\");\n    history.go(0);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }; // const handlePost = async (e) => {\n  //   e.preventDefault();\n  //   await add(postId, {\n  //     content: comment,\n  //     user_id: currentUser.id,\n  //     post_id: postId,\n  //   });\n  //   setToggle((curr) => !curr);\n  //   setFormData({ comment: \"\" });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleUpdate(id, formData);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Post:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditPostUser, \"+FM24LmR6EcLd7e4LSjhernzR/w=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditPostUser;\nexport default EditPostUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostUser\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/EditPostUser.jsx"],"names":["useParams","useState","useEffect","useHistory","destroyPost","putPost","EditPostUser","props","userPosts","setUserPosts","formData","setFormData","content","id","posts","history","prefillFormData","postData","find","post","Number","length","handleUpdate","updatedPost","prevState","map","push","go","handleChange","e","name","value","target","preventDefault"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mBAArC;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEE,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,OAAO,EAAE;AAD8B,GAAD,CAAxC;AAGA,QAAM;AAAEA,IAAAA;AAAF,MAAcF,QAApB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAASb,SAAS,EAAxB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWP,KAAjB;AACF,QAAMQ,OAAO,GAAGZ,UAAU,EAA1B;AAEED,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,eAAe,GAAG,MAAM;AAC5B,YAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAYC,IAAD,IAC1BA,IAAI,CAACN,EAAL,KAAYO,MAAM,CAACP,EAAD,CADH,CAAjB;AAEAF,MAAAA,WAAW,CAAC;AACVC,QAAAA,OAAO,EAAEK,QAAQ,CAACL;AADR,OAAD,CAAX;AAGD,KAND;;AAOA,QAAIE,KAAK,CAACO,MAAV,EAAkB;AAChBL,MAAAA,eAAe;AAChB;AACF,GAXQ,EAWN,CAACF,KAAD,EAAQD,EAAR,CAXM,CAAT;;AAaA,QAAMS,YAAY,GAAG,OAAOT,EAAP,EAAWI,QAAX,KAAwB;AAC3C,UAAMM,WAAW,GAAG,MAAMlB,OAAO,CAACQ,EAAD,EAAKI,QAAL,CAAjC;AACAR,IAAAA,YAAY,CAAEe,SAAD,IACXA,SAAS,CAACC,GAAV,CAAeN,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACN,EAAL,KAAYO,MAAM,CAACP,EAAD,CAAlB,GAAyBU,WAAzB,GAAuCJ,IAA9C;AACD,KAFD,CADU,CAAZ;AAMAJ,IAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACAX,IAAAA,OAAO,CAACY,EAAR,CAAW,CAAX;AACD,GAVD;;AAYA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACArB,IAAAA,WAAW,CAACa,SAAS,KAAK,EACxB,GAAGA,SADqB;AAExB,OAACM,IAAD,GAAQC;AAFgB,KAAL,CAAV,CAAX;AAID,GAND,CApCyB,CA2CzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAEE;AAAM,IAAA,QAAQ,EAAGF,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACI,cAAF;AACAX,MAAAA,YAAY,CAACT,EAAD,EAAKH,QAAL,CAAZ;AACD,KAHD;AAAA,4BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,uCAEA;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,KAAK,EAAEE,OAHX;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,QAAQ,EAAEgB;AALd;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBH;;GA5EQtB,Y;UAOUN,S,EAEDG,U;;;KATTG,Y;AA6EP,eAAeA,YAAf","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { destroyPost, putPost } from \"../services/posts\";\n\n\nfunction EditPostUser(props) {\n  const [userPosts, setUserPosts] = useState([])\n  \n    const [formData, setFormData] = useState({\n      content: ''\n    })\n    const { content } = formData;\n    const { id } = useParams();\n    const { posts} = props;\n  const history = useHistory()\n \n    useEffect(() => {\n      const prefillFormData = () => {\n        const postData = posts.find((post) =>\n          post.id === Number(id));\n        setFormData({\n          content: postData.content\n        })\n      }\n      if (posts.length) {\n        prefillFormData()\n      }\n    }, [posts, id])\n\n    const handleUpdate = async (id, postData) => {\n      const updatedPost = await putPost(id, postData);\n      setUserPosts((prevState) =>\n        prevState.map((post) => {\n          return post.id === Number(id) ? updatedPost : post;\n        })\n      );\n    \n      history.push(\"/users\");\n      history.go(0);\n    };\n\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value,\n      }))\n    }\n    // const handlePost = async (e) => {\n    //   e.preventDefault();\n    //   await add(postId, {\n    //     content: comment,\n    //     user_id: currentUser.id,\n    //     post_id: postId,\n    //   });\n    //   setToggle((curr) => !curr);\n    //   setFormData({ comment: \"\" });\n    // };\n\n    return (\n   \n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handleUpdate(id, formData);\n      }}>\n        <h3>Edit Post</h3>\n        <label>\n          Post:\n        <input\n            type='text'\n            name='content'\n            value={content}\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button>Submit</button>\n      </form>\n      \n    )\n  \n}\n  export default EditPostUser;"]},"metadata":{},"sourceType":"module"}