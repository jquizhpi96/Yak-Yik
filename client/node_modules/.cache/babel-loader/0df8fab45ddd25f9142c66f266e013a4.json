{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/PostDetail/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOnePost } from \"../../services/posts\";\nimport { destroyComment } from \"../../services/comments\";\nimport CreateComment from \"../CreateComment/CreateComment\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"./PostDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetail(props) {\n  _s();\n\n  const [post, setPost] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n\n  const icon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"commentsbubble\",\n    icon: faComments,\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 16\n  }, this);\n\n  const editIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"editIcon\",\n    icon: faEdit,\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 20\n  }, this);\n\n  const trashIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"trashIcon\",\n    icon: faTrashAlt,\n    size: \"lg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n\n  const params = useParams();\n  const history = useHistory();\n  console.log(params);\n  const {\n    currentUser\n  } = props;\n  console.log(currentUser);\n  console.log(comments);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postData = await getOnePost(id);\n      setPost(postData);\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const handleDelete = async id => {\n    await destroyComment(id);\n    setComments(prevState => prevState.filter(comment => comment.id !== id));\n    history.go(0);\n  };\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [post.comments.length, \" comment\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-container\",\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-comment\",\n          children: [comment.content, (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === comment.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"trash\",\n              onClick: () => {\n                handleDelete(comment.id);\n              },\n              children: trashIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, comments.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateComment, {\n      postId: post.id,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"LgLk4KYxBPs/Bmp+lchSxgOfw6g=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/PostDetail/PostDetail.jsx"],"names":["React","useState","useEffect","useParams","getOnePost","destroyComment","CreateComment","useHistory","FontAwesomeIcon","faComments","faEdit","faTrashAlt","PostDetail","props","post","setPost","id","comments","setComments","icon","editIcon","trashIcon","params","history","console","log","currentUser","fetchPost","postData","handleDelete","prevState","filter","comment","go","content","length","map","user_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOnePost } from \"../../services/posts\";\nimport { destroyComment } from \"../../services/comments\";\nimport CreateComment from \"../CreateComment/CreateComment\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComments} from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons'\nimport \"./PostDetail.css\"\nfunction PostDetail(props) {\n  const [post, setPost] = useState(\"\");\n  const { id } = useParams();\n  const [comments, setComments] = useState([]);\n  const icon = <FontAwesomeIcon className= \"commentsbubble\" icon={faComments} size=\"lg\"/>\n  const editIcon = <FontAwesomeIcon className=\"editIcon\" icon={faEdit} size=\"lg\"/>\n  const trashIcon = <FontAwesomeIcon className=\"trashIcon\" icon={faTrashAlt} size=\"lg\"/>\n  const params = useParams();\n  const history = useHistory();\n\n  console.log(params);\n\n  const { currentUser } = props;\n  console.log(currentUser);\n  console.log(comments);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postData = await getOnePost(id);\n      setPost(postData);\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const handleDelete = async (id) => {\n    await destroyComment(id);\n    setComments((prevState) =>\n      prevState.filter((comment) => comment.id !== id)\n    );\n    history.go(0);\n  };\n  if (!post) {\n    return <h4>Loading...</h4>;\n  }\n\n  return (\n    <div className=\"post-detail\">\n      <div className=\"post-content\">{post.content}</div>\n      <p>{post.comments.length} comment</p>\n      <div className= \"comment-container\">\n      {post.comments.map((comment) => (\n        <React.Fragment key={comment.id}>\n          <div className=\"user-comment\">{comment.content}\n\n          {currentUser?.id === comment.user_id && (\n            <div className=\"button2\" key={comments.id}>\n            \n              <button className=\"trash\"\n                onClick={() => {\n                  handleDelete(comment.id);\n                }}\n              >\n                {trashIcon}\n              </button>\n            </div>\n            )}\n            </div>\n        </React.Fragment>\n      ))}\n        </div>\n\n      <CreateComment postId={post.id} currentUser={currentUser} />\n    </div>\n  );\n}\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}