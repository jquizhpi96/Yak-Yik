{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport EditPost from \"../screens/EditPost\";\nimport PostDetail from \"../screens/PostDetail\";\nimport Posts from \"../screens/Posts\";\nimport { getAllPosts } from \"../services/posts\";\nimport { destroyPost, postPost, putPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]); // const [comments, setComments] = useState([]);\n\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postData = await getAllPosts();\n      setPosts(postData);\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleCreate = async postData => {\n    const newPost = await postPost(postData);\n    setPosts(prevState => [...prevState, newPost]);\n    history.push(\"/\");\n  };\n\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push(\"/\");\n  };\n\n  const handleDelete = async id => {\n    await destroyPost(id);\n    setPosts(prevState => prevState.filter(post => post.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: posts,\n          handleDelete: handleDelete,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id/edit\",\n        children: /*#__PURE__*/_jsxDEV(EditPost // posts={posts}\n        // handleUpdate={handleUpdate}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"LMnqXJ5SNk+GlN1YCaRjc/7UFkI=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/containers/MainContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","EditPost","PostDetail","Posts","getAllPosts","destroyPost","postPost","putPost","MainContainer","props","posts","setPosts","history","currentUser","fetchPosts","postData","handleCreate","newPost","prevState","push","handleUpdate","id","updatedPost","map","post","Number","handleDelete","filter"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,mBAA/C;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAD4B,CAE5B;;AAEA,QAAMgB,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBJ,KAAxB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMX,WAAW,EAAlC;AACAO,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,MAAOD,QAAP,IAAoB;AACvC,UAAME,OAAO,GAAG,MAAMX,QAAQ,CAACS,QAAD,CAA9B;AACAJ,IAAAA,QAAQ,CAAEO,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAhB,CAAR;AACAL,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,GAJD;;AAKA,QAAMC,YAAY,GAAG,OAAOC,EAAP,EAAWN,QAAX,KAAwB;AAC3C,UAAMO,WAAW,GAAG,MAAMf,OAAO,CAACc,EAAD,EAAKN,QAAL,CAAjC;AACAJ,IAAAA,QAAQ,CAAEO,SAAD,IACPA,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACH,EAAL,KAAYI,MAAM,CAACJ,EAAD,CAAlB,GAAyBC,WAAzB,GAAuCE,IAA9C;AACD,KAFD,CADM,CAAR;AAKAZ,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,GARD;;AASA,QAAMO,YAAY,GAAG,MAAOL,EAAP,IAAc;AACjC,UAAMhB,WAAW,CAACgB,EAAD,CAAjB;AACAV,IAAAA,QAAQ,CAAEO,SAAD,IAAeA,SAAS,CAACS,MAAV,CAAkBH,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAvC,CAAhB,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEX,KADT;AAEE,UAAA,YAAY,EAAEgB,YAFhB;AAGE,UAAA,WAAW,EAAEb;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,iBAAb;AAAA,+BACE,QAAC,QAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7DQL,a;UAISR,U;;;KAJTQ,a;AA+DT,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport EditPost from \"../screens/EditPost\";\nimport PostDetail from \"../screens/PostDetail\";\nimport Posts from \"../screens/Posts\";\nimport { getAllPosts } from \"../services/posts\";\nimport { destroyPost, postPost, putPost } from \"../services/posts\";\n\nfunction MainContainer(props) {\n  const [posts, setPosts] = useState([]);\n  // const [comments, setComments] = useState([]);\n\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postData = await getAllPosts();\n      setPosts(postData);\n    };\n    fetchPosts();\n  }, []);\n\n  const handleCreate = async (postData) => {\n    const newPost = await postPost(postData);\n    setPosts((prevState) => [...prevState, newPost]);\n    history.push(\"/\");\n  };\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setPosts((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(id) ? updatedPost : post;\n      })\n    );\n    history.push(\"/\");\n  };\n  const handleDelete = async (id) => {\n    await destroyPost(id);\n    setPosts((prevState) => prevState.filter((post) => post.id !== id));\n  };\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Posts\n            posts={posts}\n            handleDelete={handleDelete}\n            currentUser={currentUser}\n\n          />\n        </Route>\n        {/* <Route path='/posts/:id'>\n          <PostDetail\n            currentUser={currentUser}\n\n            />\n        </Route> */}\n        <Route path= '/posts/:id/edit'>\n          <EditPost\n            // posts={posts}\n            // handleUpdate={handleUpdate}\n          />\n        </Route>\n        \n      </Switch>\n    </div>\n  );\n}\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}