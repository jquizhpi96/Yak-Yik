{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, React } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Likes from \"../components/Likes\";\nimport Modal from \"../components/Modal\";\nimport CreatePost from \"./CreatePost\";\nimport { getAllComments } from \"../services/comments\";\nimport { useParams } from \"react-router-dom\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Posts(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const {\n    posts,\n    setPosts,\n    handleDelete,\n    currentUser\n  } = props;\n  const [show, setShow] = useState(false);\n\n  const toggleModal = () => {\n    setShow(!show);\n  }; // useEffect(() => {\n  //   const fetchComments = async (posts_id) => {\n  //     const commentData = await getAllComments(posts_id);\n  //     setComments(commentData);\n  //   };\n  //   fetchComments();\n  // }, []);\n  // console.log(comments)\n  // const postComments = comments.filter((comment) => {\n  //   posts_id === posts.id\n  // })\n  // console.log(postComments)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n      currentUser: currentUser,\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === post.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}`,\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShow(post.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) !== post.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Likes, {\n          allLikes: post.likes,\n          posts: posts,\n          postsId: posts.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}`,\n          children: [\"comments(\", posts.comments.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), show && /*#__PURE__*/_jsxDEV(Modal, {\n      posts: posts,\n      handleDelate: handleDelete,\n      show: show,\n      setShow: setShow,\n      toggleModal: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShow(false),\n        children: \"no\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleDelete(show);\n          setShow(false);\n        },\n        children: \"yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"ATxbLEzN/0QcK+ACvnnOjl0nMAI=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/jasonquizhpi/general_assembly/sei/unit_4/week_10/wednesday/Yak-Yik/client/src/screens/Posts.jsx"],"names":["useState","useEffect","React","Link","Likes","Modal","CreatePost","getAllComments","useParams","Post","Posts","props","comments","setComments","posts","setPosts","handleDelete","currentUser","show","setShow","toggleModal","map","post","content","id","user_id","likes","length"],"mappings":"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","sourcesContent":["import { useState, useEffect, React } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Likes from \"../components/Likes\";\nimport Modal from \"../components/Modal\";\nimport CreatePost from \"./CreatePost\";\nimport { getAllComments } from \"../services/comments\";\nimport { useParams } from \"react-router-dom\";\nimport Post from \"./Post\";\n\nfunction Posts(props) {\n  const [comments, setComments] = useState([]);\n  const { posts, setPosts, handleDelete, currentUser } = props;\n  const [show, setShow] = useState(false);\n  \n  const toggleModal = () => {\n    setShow(!show);\n  };\n\n  // useEffect(() => {\n  //   const fetchComments = async (posts_id) => {\n  //     const commentData = await getAllComments(posts_id);\n  //     setComments(commentData);\n  //   };\n  //   fetchComments();\n  // }, []);\n\n  // console.log(comments)\n  // const postComments = comments.filter((comment) => {\n  //   posts_id === posts.id\n    \n  // })\n  // console.log(postComments)\n\n  return (\n    <div>\n      <CreatePost currentUser={currentUser} posts={posts} setPosts={setPosts} />\n\n      <h3>Posts</h3>\n\n      {posts.map((post) => (\n        <div key={post.id}>\n          <h3>{post.content}</h3>\n          {currentUser?.id === post.user_id && (\n            <div key={post.id}>\n              <button>Like</button>\n              <Link to={`/posts/${post.id}`}>comments</Link>\n              <Link to={`/posts/${post.id}/edit`}>\n                <button>Edit</button>\n              </Link>\n\n              <button onClick={() => setShow(post.id)}>delete</button>\n            </div>\n          )}\n          {currentUser?.id !== post.user_id && (\n            <>\n              <Likes allLikes={post.likes} posts={posts} postsId={posts.id}/>\n              <button>Like</button>\n\n              <Link to={`/posts/${post.id}`}>comments({posts.comments.length})</Link>\n            </>\n          )}\n        </div>\n      ))}\n      {show && (\n        <Modal\n          posts={posts}\n          handleDelate={handleDelete}\n          show={show}\n          setShow={setShow}\n          toggleModal={toggleModal}\n        >\n          <p>Are you sure?</p>\n          <button onClick={() => setShow(false)}>no</button>\n          <button\n            onClick={() => {\n              handleDelete(show);\n              setShow(false);\n            }}\n          >\n            yes\n          </button>\n        </Modal>\n      )}\n      \n    </div>\n  );\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}